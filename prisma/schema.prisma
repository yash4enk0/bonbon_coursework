// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String?  @unique
  address      String?
  phone        String   @unique @db.VarChar(20)
  photo        String?
  bonusPoints  Int      @default(0) @map("bonus_points")
  password     String
  isAdmin      Boolean  @default(false) @map("is_admin")
  
  orders       Order[]
  reviews      ProductReview[]
  
  @@map("users")
}

model Category {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  
  products Product[]
  
  @@map("categories")
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String
  article      String   @unique @db.VarChar(50)
  description  String?
  price        Decimal  @db.Decimal(10, 2)
  availability Boolean  @default(true)
  categoryId   Int      @map("category_id")
  
  category     Category @relation(fields: [categoryId], references: [id])
  photos       ProductPhoto[]
  orderItems   OrderItem[]
  reviews      ProductReview[]
  
  @@map("products")
}

model ProductPhoto {
  id        Int     @id @default(autoincrement())
  filePath  String  @map("file_path")
  caption   String?
  productId Int     @map("product_id")
  
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  @@map("product_photos")
}

model Order {
  id              Int      @id @default(autoincrement())
  receiverName    String   @map("receiver_name")
  receiverPhone   String   @map("receiver_phone") @db.VarChar(20)
  receiverAddress String   @map("receiver_address")
  totalAmount     Decimal  @map("total_amount") @db.Decimal(10, 2)
  status          String   @default("New")
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  userId          Int?     @map("user_id")
  
  user            User?    @relation(fields: [userId], references: [id])
  orderItems      OrderItem[]
  
  @@map("orders")
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Decimal @db.Decimal(10, 2)
  productId Int     @map("product_id")
  orderId   Int     @map("order_id")
  
  product   Product @relation(fields: [productId], references: [id])
  order     Order   @relation(fields: [orderId], references: [id])
  
  @@map("order_items")
}

model ProductReview {
  id        Int     @id @default(autoincrement())
  rating    Int
  comment   String?
  photo     String?
  userId    Int     @map("user_id")
  productId Int     @map("product_id")
  
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  
  @@map("product_reviews")
}